from typing import Dict, List, Any

class Person:
    name: str
    age: int
    children: List['Person']
    
    def __init__(self) -> None: ...
    def add_child(self, child: 'Person') -> None: ...
    def to_dict(self) -> Dict[str, Any]: ...
    
    @staticmethod
    def from_dict(dict_data: Dict[str, Any]) -> 'Person': ...
    
    @staticmethod
    def validate(value: Any) -> 'Person': ...

def new_person(name: str, age: int) -> Person: ...
def create_random_person() -> Person: ...
def create_nested_person(depth: int, max_children: int) -> Person: ... 